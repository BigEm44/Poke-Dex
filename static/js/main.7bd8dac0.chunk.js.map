{"version":3,"sources":["components/PokemonListDetails.js","context/PokemonListContext.js","context/PokemonFilterContext.js","components/PokemonList.js","components/FilterPokemons.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["PokemonListDetails","pokemon","className","name","src","sprites","front_default","alt","height","weight","types","map","type","index","key","abilities","ability","PokemonListContext","createContext","PokemonListContextProvider","props","useState","pokemons","setPokemons","nextPage","setNextPage","prevPage","setPrevPage","loading","setLoading","api","a","Promise","resolve","reject","fetch","then","response","json","data","catch","err","alert","Provider","value","initialApi","filterApi","getAllPokemon","getPokemon","children","PokemonFilterContext","PokemonFilterContextProvider","menu","setMenuToggle","typeForm","setTypeForm","typeFilter","setTypeFilter","abilityForm","setAbilityForm","abilityFilter","setAbilityFilter","nameForm","setNameForm","nameFilter","setNameFilter","pokemonTypes","id","pokemonAbilities","menuToggle","handleTypeChange","e","target","handleTypeSubmit","preventDefault","handleAbilityChange","handleAbilitySubmit","handleNameChange","toLowerCase","handleNameSubmit","PokemonList","useContext","useEffect","next","previous","loadingPokemon","results","fetchData","prev","all","url","pokemonRecord","singlePokemon","filter","find","el","onClick","FilterPokemons","onSubmit","onChange","Header","Fragment","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.7bd8dac0.chunk.js","sourcesContent":["import React from 'react';\n\nconst PokemonListDetails = ({ pokemon }) => {\n  return (\n    <div className=\"pokemonListDetails\">\n      <h2 className=\"pokemonListDetails__name\">{pokemon.name}</h2>\n      <div className=\"pokemonListDetails__image\">\n        <img src={pokemon.sprites.front_default} alt={pokemon.name} />\n      </div>\n      <div className=\"pokemonListDetails__basicData\">\n        <div className=\"pokemonListDetails__basicDate--height\">\n          <h3>Height</h3>\n          <p>{pokemon.height}</p>\n        </div>\n        <div className=\"pokemonListDetails__basicDate--weight\">\n          <h3>Weight</h3>\n          <p>{pokemon.weight}</p>\n        </div>\n      </div>\n      <h3>Type:</h3>\n      <div className=\"pokemonListDetails__types\">\n        {pokemon.types.map((type, index) => {\n          return (\n            <div className=\"pokemonListDetails__type\" key={index}>\n              {type.type.name}\n            </div>\n          );\n        })}\n      </div>\n      <h3>Ability:</h3>\n      <div className=\"pokemonListDetails__abilities\">\n        {pokemon.abilities.map((ability, index) => {\n          return (\n            <div className=\"pokemoneListDetails__ability\" key={index}>\n              {ability.ability.name}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonListDetails;\n","import React, { createContext, useState } from 'react';\n\nexport const PokemonListContext = createContext();\n\nconst PokemonListContextProvider = (props) => {\n  const [pokemons, setPokemons] = useState([]);\n  const [nextPage, setNextPage] = useState('');\n  const [prevPage, setPrevPage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initialApi = 'https://pokeapi.co/api/v2/pokemon';\n  const filterApi = 'https://pokeapi.co/api/v2/pokemon/?offset=0&limit=964';\n\n  async function getAllPokemon(api) {\n    return new Promise((resolve, reject) => {\n      fetch(api)\n        .then((response) => response.json())\n        .then((data) => {\n          resolve(data);\n        })\n        .catch((err) => {\n          alert(err + 'Try to refresh page');\n        });\n    });\n  }\n\n  async function getPokemon(api) {\n    return new Promise((resolve, reject) => {\n      fetch(api)\n        .then((response) => response.json())\n        .then((data) => {\n          resolve(data);\n        })\n        .catch((err) => alert(err + 'Try to refresh page'));\n    });\n  }\n\n  return (\n    <PokemonListContext.Provider\n      value={{\n        pokemons,\n        nextPage,\n        prevPage,\n        loading,\n        initialApi,\n        filterApi,\n        setPokemons,\n        setNextPage,\n        setPrevPage,\n        setLoading,\n        getAllPokemon,\n        getPokemon,\n      }}\n    >\n      {props.children}\n    </PokemonListContext.Provider>\n  );\n};\n\nexport default PokemonListContextProvider;\n","import React, { createContext, useState } from 'react';\n\nexport const PokemonFilterContext = createContext();\n\nconst PokemonFilterContextProvider = (props) => {\n  const [menu, setMenuToggle] = useState(false);\n  const menuToggle = () => {\n    setMenuToggle(!menu);\n    setTypeFilter(false);\n    setAbilityFilter(false);\n    setNameFilter(false);\n  };\n\n  const pokemonTypes = [\n    { name: 'normal', id: 1 },\n    { name: 'fighting', id: 2 },\n    { name: 'poison', id: 3 },\n    { name: 'ground', id: 4 },\n    { name: 'rock', id: 5 },\n    { name: 'bug', id: 6 },\n    { name: 'ghost', id: 7 },\n    { name: 'steel', id: 8 },\n    { name: 'fire', id: 9 },\n    { name: 'water', id: 10 },\n    { name: 'grass', id: 11 },\n    { name: 'electric', id: 12 },\n    { name: 'psychic', id: 13 },\n    { name: 'ice', id: 14 },\n    { name: 'dragon', id: 15 },\n    { name: 'fairy', id: 16 },\n    { name: 'dark', id: 17 },\n  ];\n  const [typeForm, setTypeForm] = useState('normal');\n  const [typeFilter, setTypeFilter] = useState(false);\n  const handleTypeChange = (e) => setTypeForm(e.target.value);\n  const handleTypeSubmit = (e) => {\n    e.preventDefault();\n    setMenuToggle(false);\n    setTypeFilter(true);\n  };\n\n  const pokemonAbilities = [\n    { name: 'blaze', id: 1 },\n    { name: 'chlorophyll', id: 2 },\n    { name: 'clear-body', id: 3 },\n    { name: 'damp', id: 4 },\n    { name: 'flame-body', id: 5 },\n    { name: 'flash-fire', id: 6 },\n    { name: 'frisk', id: 7 },\n    { name: 'gluttony', id: 8 },\n    { name: 'guts', id: 9 },\n    { name: 'hustle', id: 10 },\n    { name: 'infiltrator', id: 11 },\n    { name: 'inner-focus', id: 12 },\n    { name: 'insomnia', id: 13 },\n    { name: 'intimidate', id: 14 },\n    { name: 'keen-eye', id: 15 },\n    { name: 'leaf-guard', id: 16 },\n    { name: 'oblivious', id: 17 },\n    { name: 'overgrow', id: 18 },\n    { name: 'run-away', id: 19 },\n    { name: 'shell-armor', id: 20 },\n    { name: 'sniper', id: 21 },\n    { name: 'sturdy', id: 22 },\n    { name: 'swift-swim', id: 23 },\n    { name: 'torrent', id: 24 },\n    { name: 'water-absorb', id: 25 },\n  ];\n  const [abilityForm, setAbilityForm] = useState('blaze');\n  const [abilityFilter, setAbilityFilter] = useState(false);\n  const handleAbilityChange = (e) => setAbilityForm(e.target.value);\n  const handleAbilitySubmit = (e) => {\n    e.preventDefault();\n    setMenuToggle(false);\n    setAbilityFilter(true);\n  };\n\n  const [nameForm, setNameForm] = useState('');\n  const [nameFilter, setNameFilter] = useState(false);\n  const handleNameChange = (e) => setNameForm(e.target.value.toLowerCase());\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n    setMenuToggle(false);\n    setNameFilter(true);\n  };\n\n  return (\n    <PokemonFilterContext.Provider\n      value={{\n        menu,\n        pokemonTypes,\n        typeForm,\n        typeFilter,\n        pokemonAbilities,\n        abilityForm,\n        abilityFilter,\n        nameForm,\n        nameFilter,\n        setMenuToggle,\n        menuToggle,\n        setTypeFilter,\n        setAbilityForm,\n        setAbilityFilter,\n        handleTypeChange,\n        handleTypeSubmit,\n        handleAbilityChange,\n        handleAbilitySubmit,\n        handleNameChange,\n        handleNameSubmit,\n      }}\n    >\n      {props.children}\n    </PokemonFilterContext.Provider>\n  );\n};\nexport default PokemonFilterContextProvider;\n","import React, { useEffect, useContext } from 'react';\nimport PokemonListDetails from './PokemonListDetails';\nimport { PokemonListContext } from '../context/PokemonListContext';\nimport { PokemonFilterContext } from '../context/PokemonFilterContext';\n\nconst PokemonList = () => {\n  const {\n    initialApi,\n    filterApi,\n    pokemons,\n    nextPage,\n    prevPage,\n    loading,\n    setPokemons,\n    setNextPage,\n    setPrevPage,\n    setLoading,\n    getPokemon,\n    getAllPokemon,\n  } = useContext(PokemonListContext);\n  const {\n    typeFilter,\n    abilityFilter,\n    nameFilter,\n    typeForm,\n    abilityForm,\n    nameForm,\n  } = useContext(PokemonFilterContext);\n\n  useEffect(() => {\n    async function fetchData() {\n      let response =\n        typeFilter || abilityFilter || nameFilter\n          ? await getAllPokemon(filterApi)\n          : await getAllPokemon(initialApi);\n      setNextPage(response.next);\n      setPrevPage(response.previous);\n      await loadingPokemon(response.results);\n      setLoading(false);\n    }\n    fetchData();\n  }, [typeFilter, abilityFilter, nameFilter]);\n\n  const next = async () => {\n    setLoading(true);\n    let data = await getAllPokemon(nextPage);\n    await loadingPokemon(data.results);\n    setNextPage(data.next);\n    setPrevPage(data.previous);\n    setLoading(false);\n  };\n\n  const prev = async () => {\n    if (!prevPage) return;\n    setLoading(true);\n    let data = await getAllPokemon(prevPage);\n    await loadingPokemon(data.results);\n    setNextPage(data.next);\n    setPrevPage(data.previous);\n    setLoading(false);\n  };\n\n  const loadingPokemon = async (data) => {\n    let singlePokemon = await Promise.all(\n      data.map(async (pokemon) => {\n        let pokemonRecord = await getPokemon(pokemon.url);\n        return pokemonRecord;\n      })\n    );\n\n    switch (true) {\n      case typeFilter:\n        setPokemons(\n          singlePokemon.filter((type) =>\n            type.types.find((el) => el.type.name === typeForm)\n          )\n        );\n        break;\n      case abilityFilter:\n        setPokemons(\n          singlePokemon.filter((ability) =>\n            ability.abilities.find((el) => el.ability.name === abilityForm)\n          )\n        );\n        break;\n      case nameFilter:\n        setPokemons(singlePokemon.filter((name) => name.name === nameForm));\n        break;\n      default:\n        setPokemons(singlePokemon);\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      {loading ? (\n        <h2>Loading...</h2>\n      ) : (\n        <>\n          <div className=\"navigateButtons\">\n            <button onClick={prev}>Prev Page</button>\n            <button onClick={next}>Next Page</button>\n          </div>\n          <div className=\"pokemonList\">\n            {pokemons.map((pokemon, index) => {\n              return <PokemonListDetails key={index} pokemon={pokemon} />;\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PokemonList;\n","import React, { useContext } from 'react';\nimport { PokemonFilterContext } from '../context/PokemonFilterContext';\n\nconst FilterPokemons = () => {\n  const {\n    pokemonTypes,\n    typeForm,\n    abilityForm,\n    pokemonAbilities,\n    handleTypeChange,\n    handleTypeSubmit,\n    handleAbilityChange,\n    handleAbilitySubmit,\n    handleNameChange,\n    handleNameSubmit,\n  } = useContext(PokemonFilterContext);\n\n  return (\n    <div className=\"filterPokemon\">\n      <div className=\"filterPokemon__category\">\n        <div className=\"filterPokemon__category--name\">\n          <form onSubmit={handleNameSubmit}>\n            <h3>Enter pokemon name</h3>\n            <label>\n              <input\n                type=\"text\"\n                name=\"pokemonName\"\n                onChange={handleNameChange}\n              ></input>\n              <button>Apply</button>\n            </label>\n          </form>\n        </div>\n        <div className=\"filterPokemon__category--type\">\n          <form onSubmit={handleTypeSubmit}>\n            <h3>Choose type</h3>\n            <label>\n              <select\n                name=\"pokemonType\"\n                onChange={handleTypeChange}\n                value={typeForm}\n              >\n                {pokemonTypes.map((type) => {\n                  return (\n                    <option key={type.id} value={type.name}>\n                      {type.name}\n                    </option>\n                  );\n                })}\n              </select>\n            </label>\n            <input type=\"submit\" value=\"Apply\" />\n          </form>\n        </div>\n        <div className=\"filterPokemon__category--ability\">\n          <form onSubmit={handleAbilitySubmit}>\n            <h3>Choose ability</h3>\n            <label>\n              <select\n                name=\"pokemonAbility\"\n                onChange={handleAbilityChange}\n                value={abilityForm}\n              >\n                {pokemonAbilities.map((ability) => {\n                  return (\n                    <option key={ability.id} value={ability.name}>\n                      {ability.name}\n                    </option>\n                  );\n                })}\n              </select>\n            </label>\n            <input type=\"submit\" value=\"Apply\" />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterPokemons;\n","import React, { useContext } from 'react';\nimport { PokemonFilterContext } from '../context/PokemonFilterContext';\nimport FilterPokemons from './FilterPokemons';\n\nconst Header = () => {\n  const { menu, menuToggle, nameFilter } = useContext(PokemonFilterContext);\n\n  return (\n    <div className=\"header\">\n      <h1>Pokedex</h1>\n      <button className=\"menuBtn\" onClick={() => menuToggle()}>\n        {menu ? 'Close Filters' : 'Find Pokemon'}\n        {nameFilter ? '/ Show all' : ''}\n      </button>\n      {menu ? <FilterPokemons /> : <React.Fragment />}\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PokemonList from './components/PokemonList';\nimport Header from './components/Header';\nimport PokemonListContextProvider from './context/PokemonListContext';\nimport PokemonFilterContextProvider from './context/PokemonFilterContext';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <PokemonListContextProvider>\n        <PokemonFilterContextProvider>\n          <Header />\n          <PokemonList />\n        </PokemonFilterContextProvider>\n      </PokemonListContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}